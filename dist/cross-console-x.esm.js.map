{"version":3,"sources":["../src/cross-console-x.js"],"names":[],"mappings":"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","file":"cross-console-x.esm.js","sourcesContent":["import defineProperties from 'object-define-properties-x';\nimport defineProperty from 'object-define-property-x';\nimport isPrimitive from 'is-primitive-x';\nimport isFunction from 'is-function-x';\nimport forEach from 'array-for-each-x';\nimport assert from 'assert-x';\nimport inspect from 'inspect-x';\nimport slice from 'array-slice-x';\nimport hasOwn from 'has-own-property-x';\nimport {format} from 'util-format-x';\nimport {MapConstructor} from 'collections-x';\nimport safeToString from 'to-string-symbols-supported-x';\nimport objectKeys from 'object-keys-x';\nimport toISOString from 'to-iso-string-x';\nimport includes from 'array-includes-x';\nimport {create} from 'error-x';\nimport attempt from 'attempt-x';\nimport toBoolean from 'to-boolean-x';\n\nconst DateCtr = Date;\nconst {getTime} = DateCtr.prototype;\nconst {apply} = attempt.prototype;\n/* eslint-disable-next-line no-void */\nconst UNDEFINED = void 0;\nconst properties = [\n  'assert',\n  'clear',\n  'count',\n  'debug',\n  'dir',\n  'dirxml',\n  'error',\n  'exception',\n  'group',\n  'groupCollapsed',\n  'groupEnd',\n  'info',\n  'log',\n  'markTimeline',\n  'profile',\n  'profileEnd',\n  'table',\n  'time',\n  'timeEnd',\n  'timeStamp',\n  'trace',\n  'warn',\n];\n\nconst Trace = create('Trace');\n\nconst getFn = function getFn(method, property) {\n  if (isPrimitive(method) === false) {\n    const f = function f(context, args) {\n      const res = attempt(function attemptee() {\n        return apply.call(method, context, slice(args));\n      });\n\n      return res.threw ? UNDEFINED : res.value;\n    };\n\n    /* eslint-disable-next-line no-new-func */\n    return Function('f', `return function ${property}(){return f(this,arguments)}`)(f);\n  }\n\n  return UNDEFINED;\n};\n\n/**\n * The cross-console-x object provides access to the browser's debugging console\n * (e.g., the Web Console in Firefox). The specifics of how it works vary from\n * browser to browser, but there is a de facto set of features that are\n * typically provided.\n *\n * Missing methods are shimmed when possible, otherwise they provide no\n * operation.\n *\n * Additional stamp() method provided.\n * A thin wrapper to any method that prepends a timestamp.\n *\n * @see {@link https://developer.mozilla.org/en/docs/Web/API/console}\n */\nconst con = {};\n\nif (typeof console !== 'undefined' && isPrimitive(console) === false) {\n  forEach(properties, function assigner1(property) {\n    if (hasOwn(console, property)) {\n      /* eslint-disable-next-line no-console */\n      const method = console[property];\n      const fn = getFn(method, property);\n\n      if (isFunction(fn)) {\n        defineProperty(con, property, {\n          value: fn,\n        });\n      }\n    }\n  });\n}\n\nconst {get, set, has} = MapConstructor.prototype;\nconst times = new MapConstructor();\nconst shams = defineProperties(\n  {},\n  {\n    consoleAssert: {\n      enumerable: true,\n      value: function consoleAssert() {\n        /* eslint-disable-next-line prefer-rest-params */\n        const expression = arguments[0];\n\n        if (toBoolean(expression) === false) {\n          /* eslint-disable-next-line prefer-rest-params */\n          assert.ok(false, format(...slice(arguments, 1)));\n        }\n      },\n    },\n\n    dir: {\n      enumerable: true,\n      value: function dir() {\n        if (arguments.length > 0) {\n          /* eslint-disable-next-line prefer-rest-params */\n          this.log(`${inspect(arguments[0])}\\n`);\n        } else {\n          this.log();\n        }\n      },\n    },\n\n    error: {\n      enumerable: true,\n      value: function error() {\n        /* eslint-disable-next-line prefer-rest-params,prefer-spread */\n        this.warn.apply(this, slice(arguments));\n      },\n    },\n\n    info: {\n      enumerable: true,\n      value: function info() {\n        /* eslint-disable-next-line prefer-rest-params,prefer-spread */\n        this.log.apply(this, slice(arguments));\n      },\n    },\n\n    log: {\n      enumerable: true,\n      /* eslint-disable-next-line lodash/prefer-noop */\n      value: function log() {},\n    },\n\n    stamp: {\n      enumerable: true,\n      value: function stamp() {\n        /* eslint-disable-next-line prefer-rest-params */\n        const type = arguments.length > 0 ? arguments[0] : null;\n\n        if (includes(properties, type)) {\n          const stampStr = format('[%s] [%s]', toISOString(new DateCtr()), type);\n          /* eslint-disable-next-line prefer-rest-params */\n          this[type].apply(this, [stampStr, ...slice(arguments, 1)]);\n        }\n      },\n    },\n\n    time: {\n      enumerable: true,\n      value: function time() {\n        /* eslint-disable-next-line prefer-rest-params */\n        const label = arguments.length > 0 ? safeToString(arguments[0]) : 'default';\n        set.call(times, label, getTime.call(new DateCtr()));\n      },\n    },\n\n    timeEnd: {\n      enumerable: true,\n      value: function timeEnd() {\n        /* eslint-disable-next-line prefer-rest-params */\n        const label = arguments.length > 0 ? safeToString(arguments[0]) : 'default';\n        let duration;\n\n        if (has.call(times, label)) {\n          duration = getTime.call(new DateCtr()) - get.call(times, label);\n          const key = 'delete';\n          times[key](label);\n        } else {\n          duration = 0;\n        }\n\n        this.log(`${label}: ${duration}ms`);\n      },\n    },\n\n    trace: {\n      enumerable: true,\n      value: function trace() {\n        /* eslint-disable-next-line prefer-rest-params */\n        this.error(new Trace(format(...slice(arguments))));\n      },\n    },\n\n    warn: {\n      enumerable: true,\n      value: function warn() {\n        /* eslint-disable-next-line prefer-rest-params,prefer-spread */\n        this.log.apply(this, slice(arguments));\n      },\n    },\n  },\n);\n\nforEach(objectKeys(shams), function assigner2(key) {\n  if (hasOwn(con, key) === false) {\n    defineProperty(con, key, {\n      value: shams[key],\n    });\n  }\n});\n\nforEach(properties, function assigner3(property) {\n  if (hasOwn(con, property) === false) {\n    defineProperty(con, property, {\n      /* eslint-disable-next-line lodash/prefer-noop */\n      value() {},\n    });\n  }\n});\n\nexport default con;\n"]}